version: '3.8'

services:
  # Kong database
  kong-database:
    image: postgres:13
    container_name: kong-database
    environment:
      POSTGRES_USER: kong
      POSTGRES_DB: kong
      POSTGRES_PASSWORD: kong
    ports:
      - "5432:5432"
    volumes:
      - kong-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "kong"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Kong migration service
  kong-migration:
    image: kong:3.4.1
    command: kong migrations bootstrap
    depends_on:
      - kong-database
    environment:
      KONG_DATABASE: postgres
      KONG_PG_HOST: kong-database
      KONG_PG_USER: kong
      KONG_PG_PASSWORD: kong
      KONG_PG_DATABASE: kong

  # Kong gateway service
  kong:
    image: kong:3.4.1
    container_name: kong
    restart: always
    depends_on:
      - kong-database
      - kong-migration
    environment:
      KONG_DATABASE: "off"
      KONG_DECLARATIVE_CONFIG: /etc/kong/kong.yml
      KONG_PROXY_ACCESS_LOG: /dev/stdout
      KONG_ADMIN_ACCESS_LOG: /dev/stdout
      KONG_PROXY_ERROR_LOG: /dev/stderr
      KONG_ADMIN_ERROR_LOG: /dev/stderr
      KONG_ADMIN_LISTEN: 0.0.0.0:8001, 0.0.0.0:8444 ssl
    ports:
      - "8000:8000"  # Kong proxy port
      - "8443:8443"  # Kong proxy SSL port
      - "8001:8001"  # Kong admin API
      - "8444:8444"  # Kong admin API SSL
    volumes:
      - ./kong.yml:/etc/kong/kong.yml:ro
    healthcheck:
      test: ["CMD", "kong", "health"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Auth service
  auth-service:
    build:
      context: ./backend
      dockerfile: Auth.Dockerfile
    container_name: auth-service
    restart: always
    environment:
      SECRET_KEY: "your-secret-key"
      ALGORITHM: "HS256"
      ACCESS_TOKEN_EXPIRE_MINUTES: "30"
    ports:
      - "8080:8000"

  # Product service
  product-service:
    build:
      context: ./backend
      dockerfile: Product.Dockerfile
    container_name: product-service
    restart: always
    ports:
      - "8082:8002"

  # Orders service
  orders-service:
    build:
      context: ./backend
      dockerfile: Orders.Dockerfile
    container_name: orders-service
    restart: always
    ports:
      - "8083:8003"

  # Database service
  database-service:
    build:
      context: ./backend
      dockerfile: Database.Dockerfile
    container_name: database-service
    restart: always
    ports:
      - "8081:8001"

  # Postgres for application
  postgres:
    image: postgres:13
    container_name: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: app
    ports:
      - "5433:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
      
  # Konga - Kong Admin UI
  konga:
    image: pantsel/konga:latest
    container_name: konga
    restart: always
    environment:
      NODE_ENV: development
    ports:
      - "1337:1337"
    depends_on:
      - kong
    volumes:
      - konga-data:/data

volumes:
  kong-data:
  postgres-data:
  konga-data:

